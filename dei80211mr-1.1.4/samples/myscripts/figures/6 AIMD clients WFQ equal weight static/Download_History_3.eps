%!PS-Adobe-2.0 EPSF-2.0
%%Title: Download_History_3.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Tue Jan 29 12:44:49 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Download_History_3.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (lapmore)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jan 29 12:44:49 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
686 448 M
63 0 V
6198 0 R
-63 0 V
602 448 M
( 0) Rshow
1.000 UL
LTb
686 1185 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.5) Rshow
1.000 UL
LTb
686 1922 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 1) Rshow
1.000 UL
LTb
686 2659 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 1.5) Rshow
1.000 UL
LTb
686 3397 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 2) Rshow
1.000 UL
LTb
686 4134 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 2.5) Rshow
1.000 UL
LTb
686 4871 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3) Rshow
1.000 UL
LTb
686 448 M
0 63 V
0 4360 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1312 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 100) Cshow
1.000 UL
LTb
1938 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 200) Cshow
1.000 UL
LTb
2564 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 300) Cshow
1.000 UL
LTb
3190 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 400) Cshow
1.000 UL
LTb
3817 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 500) Cshow
1.000 UL
LTb
4443 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 600) Cshow
1.000 UL
LTb
5069 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 700) Cshow
1.000 UL
LTb
5695 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 800) Cshow
1.000 UL
LTb
6321 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 900) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4871 N
686 448 L
6261 0 V
0 4423 V
-6261 0 V
Z stroke
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 M
(Requested Bitrate \(Mb/s\)) Cshow
grestore
LTb
LCb setrgbcolor
3816 98 M
(time \(s\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
6296 4738 M
(client) Rshow
LT0
6380 4738 M
399 0 V
697 637 M
2 2830 V
29 0 V
30 0 V
31 0 V
32 0 V
31 0 V
31 378 V
32 0 V
31 0 V
31 0 V
31 0 V
32 0 V
31 0 V
31 0 V
32 0 V
31 377 V
31 0 V
32 0 V
31 0 V
63 0 V
31 0 V
62 -377 V
32 377 V
34 0 V
37 -377 V
33 0 V
33 0 V
33 0 V
33 0 V
33 0 V
33 0 V
32 0 V
33 0 V
33 0 V
33 0 V
33 0 V
33 0 V
33 0 V
33 0 V
32 0 V
33 0 V
33 0 V
33 0 V
33 0 V
33 0 V
33 0 V
33 0 V
33 0 V
33 0 V
34 0 V
33 0 V
33 0 V
34 0 V
34 0 V
33 0 V
33 0 V
33 0 V
33 0 V
33 0 V
33 0 V
33 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
31 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 -378 V
31 0 V
32 0 V
31 0 V
31 378 V
32 0 V
31 0 V
31 0 V
32 0 V
31 0 V
32 0 V
32 0 V
31 0 V
31 0 V
32 0 V
32 0 V
32 0 V
32 0 V
stroke 4004 3845 M
32 0 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 -378 V
31 0 V
31 0 V
32 378 V
31 0 V
31 0 V
32 0 V
31 0 V
31 0 V
32 0 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
31 0 V
32 0 V
32 -378 V
32 0 V
31 0 V
31 0 V
31 0 V
32 378 V
31 0 V
31 0 V
32 0 V
31 0 V
31 0 V
32 0 V
31 0 V
31 0 V
33 0 V
32 0 V
33 0 V
32 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
697 637 Pls
699 3467 Pls
728 3467 Pls
758 3467 Pls
789 3467 Pls
821 3467 Pls
852 3467 Pls
883 3845 Pls
915 3845 Pls
946 3845 Pls
977 3845 Pls
1008 3845 Pls
1040 3845 Pls
1071 3845 Pls
1102 3845 Pls
1134 3845 Pls
1165 4222 Pls
1196 4222 Pls
1228 4222 Pls
1259 4222 Pls
1322 4222 Pls
1353 4222 Pls
1415 3845 Pls
1447 4222 Pls
1481 4222 Pls
1518 3845 Pls
1551 3845 Pls
1584 3845 Pls
1617 3845 Pls
1650 3845 Pls
1683 3845 Pls
1716 3845 Pls
1748 3845 Pls
1781 3845 Pls
1814 3845 Pls
1847 3845 Pls
1880 3845 Pls
1913 3845 Pls
1946 3845 Pls
1979 3845 Pls
2011 3845 Pls
2044 3845 Pls
2077 3845 Pls
2110 3845 Pls
2143 3845 Pls
2176 3845 Pls
2209 3845 Pls
2242 3845 Pls
2275 3845 Pls
2308 3845 Pls
2342 3845 Pls
2375 3845 Pls
2408 3845 Pls
2442 3845 Pls
2476 3845 Pls
2509 3845 Pls
2542 3845 Pls
2575 3845 Pls
2608 3845 Pls
2641 3845 Pls
2674 3845 Pls
2707 3845 Pls
2739 3845 Pls
2771 3845 Pls
2803 3845 Pls
2834 3845 Pls
2866 3845 Pls
2898 3845 Pls
2930 3845 Pls
2961 3845 Pls
2993 3845 Pls
3024 3845 Pls
3056 3845 Pls
3087 3845 Pls
3119 3845 Pls
3151 3845 Pls
3183 3845 Pls
3214 3845 Pls
3246 3845 Pls
3277 3845 Pls
3309 3845 Pls
3341 3845 Pls
3373 3845 Pls
3405 3845 Pls
3436 3845 Pls
3468 3467 Pls
3499 3467 Pls
3531 3467 Pls
3562 3467 Pls
3593 3845 Pls
3625 3845 Pls
3656 3845 Pls
3687 3845 Pls
3719 3845 Pls
3750 3845 Pls
3782 3845 Pls
3814 3845 Pls
3845 3845 Pls
3876 3845 Pls
3908 3845 Pls
3940 3845 Pls
3972 3845 Pls
4004 3845 Pls
4036 3845 Pls
4067 3845 Pls
4099 3845 Pls
4131 3845 Pls
4162 3845 Pls
4194 3845 Pls
4226 3845 Pls
4258 3845 Pls
4289 3845 Pls
4321 3845 Pls
4353 3845 Pls
4385 3467 Pls
4416 3467 Pls
4447 3467 Pls
4479 3845 Pls
4510 3845 Pls
4541 3845 Pls
4573 3845 Pls
4604 3845 Pls
4635 3845 Pls
4667 3845 Pls
4698 3845 Pls
4730 3845 Pls
4762 3845 Pls
4793 3845 Pls
4825 3845 Pls
4856 3845 Pls
4888 3845 Pls
4920 3845 Pls
4951 3845 Pls
4983 3845 Pls
5014 3845 Pls
5046 3845 Pls
5078 3467 Pls
5110 3467 Pls
5141 3467 Pls
5172 3467 Pls
5203 3467 Pls
5235 3845 Pls
5266 3845 Pls
5297 3845 Pls
5329 3845 Pls
5360 3845 Pls
5391 3845 Pls
5423 3845 Pls
5454 3845 Pls
5485 3845 Pls
5518 3845 Pls
5550 3845 Pls
5583 3845 Pls
5615 3845 Pls
5647 3845 Pls
5679 3845 Pls
5711 3845 Pls
5742 3845 Pls
5774 3845 Pls
5805 3845 Pls
5837 3845 Pls
5869 3845 Pls
5900 3845 Pls
5932 3845 Pls
5964 3845 Pls
5996 3845 Pls
6028 3845 Pls
6059 3845 Pls
6091 3845 Pls
6123 3845 Pls
6154 3845 Pls
6186 3845 Pls
6218 3845 Pls
6250 3845 Pls
6282 3845 Pls
6313 3845 Pls
6345 3845 Pls
6377 3845 Pls
6409 3845 Pls
6440 3845 Pls
6579 4738 Pls
% End plot #1
1.000 UL
LTb
686 4871 N
686 448 L
6261 0 V
0 4423 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
